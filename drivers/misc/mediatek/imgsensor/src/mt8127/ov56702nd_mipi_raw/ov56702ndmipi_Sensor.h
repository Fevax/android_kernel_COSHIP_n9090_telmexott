/*****************************************************************************
 *
 * Filename:
 * ---------
 *	 OV56702NDmipi_Sensor.h
 *
 * Project:
 * --------
 *	 ALPS
 *
 * Description:
 * ------------
 *	 CMOS sensor header file
 *
 ****************************************************************************/
#ifndef _OV56702NDMIPI_SENSOR_H
#define _OV56702NDMIPI_SENSOR_H

typedef enum group_enum {
    PRE_GAIN=0,
    CMMCLK_CURRENT,
    FRAME_RATE_LIMITATION,
    REGISTER_EDITOR,
    GROUP_TOTAL_NUMS
} FACTORY_GROUP_ENUM;


#define ENGINEER_START_ADDR 10
#define FACTORY_START_ADDR 0

typedef enum engineer_index
{
    CMMCLK_CURRENT_INDEX=ENGINEER_START_ADDR,
    ENGINEER_END
} FACTORY_ENGINEER_INDEX;

typedef enum register_index
{
	SENSOR_BASEGAIN=FACTORY_START_ADDR,
	PRE_GAIN_R_INDEX,
	PRE_GAIN_Gr_INDEX,
	PRE_GAIN_Gb_INDEX,
	PRE_GAIN_B_INDEX,
	FACTORY_END_ADDR
} FACTORY_REGISTER_INDEX;

typedef struct
{
    SENSOR_REG_STRUCT	Reg[ENGINEER_END];
    SENSOR_REG_STRUCT	CCT[FACTORY_END_ADDR];
} SENSOR_DATA_STRUCT, *PSENSOR_DATA_STRUCT;

typedef enum {
    SENSOR_MODE_INIT = 0,
    SENSOR_MODE_PREVIEW,
    SENSOR_MODE_VIDEO,
    SENSOR_MODE_CAPTURE
} OV56702ND_SENSOR_MODE;


typedef struct
{
	kal_uint32 DummyPixels;
	kal_uint32 DummyLines;
	
	kal_uint32 pvShutter;
	kal_uint32 pvGain;
	
	kal_uint32 pvPclk;  
	kal_uint32 videoPclk;
	kal_uint32 capPclk;
	
	kal_uint32 shutter;

	kal_uint16 sensorGlobalGain;
	kal_uint16 ispBaseGain;
	kal_uint16 realGain;

	kal_int16 imgMirror;

	OV56702ND_SENSOR_MODE sensorMode;

	kal_bool OV56702NDAutoFlickerMode;
	kal_bool OV56702NDVideoMode;
	
}OV56702ND_PARA_STRUCT,*POV56702ND_PARA_STRUCT;


    #define OV56702ND_SHUTTER_MARGIN 			(4)
	#define OV56702ND_GAIN_BASE				(128)
	#define OV56702ND_AUTOFLICKER_OFFSET_30 	(296)
	#define OV56702ND_AUTOFLICKER_OFFSET_25 	(250)
	#define OV56702ND_AUTOFLICKER_OFFSET_15 	(146)
	#define OV56702ND_PREVIEW_PCLK 			(102850000)
	#define OV56702ND_VIDEO_PCLK 				(OV56702ND_PREVIEW_PCLK)
	#define OV56702ND_CAPTURE_PCLK 			(102850000)
	
	#define OV56702ND_MAX_FPS_PREVIEW			(300)
	#define OV56702ND_MAX_FPS_VIDEO			(300)
	#define OV56702ND_MAX_FPS_CAPTURE			(250)
	//#define OV56702ND_MAX_FPS_N3D				(300)


	//grab window
	#define OV56702ND_IMAGE_SENSOR_PV_WIDTH					(1296)
	#define OV56702ND_IMAGE_SENSOR_PV_HEIGHT					(972) //(960)
	#define OV56702ND_IMAGE_SENSOR_VIDEO_WIDTH 				(OV56702ND_IMAGE_SENSOR_PV_WIDTH)
	#define OV56702ND_IMAGE_SENSOR_VIDEO_HEIGHT				(OV56702ND_IMAGE_SENSOR_PV_HEIGHT)
	#define OV56702ND_IMAGE_SENSOR_FULL_WIDTH					(2592)	
	#define OV56702ND_IMAGE_SENSOR_FULL_HEIGHT 				(1944)

	#define OV56702ND_FULL_X_START						    		(0)
	#define OV56702ND_FULL_Y_START						    		(0)
	#define OV56702ND_PV_X_START						    		(0)
	#define OV56702ND_PV_Y_START						    		(0)
	#define OV56702ND_VIDEO_X_START								(0)
	#define OV56702ND_VIDEO_Y_START								(0)

	#define OV56702ND_MAX_ANALOG_GAIN					(8)
	#define OV56702ND_MIN_ANALOG_GAIN					(1)


	/* SENSOR PIXEL/LINE NUMBERS IN ONE PERIOD */
	#define OV56702ND_PV_PERIOD_PIXEL_NUMS 				0x068C	//1676*2=>3352
	#define OV56702ND_PV_PERIOD_LINE_NUMS					0x07FD	//2045

	#define OV56702ND_VIDEO_PERIOD_PIXEL_NUMS				OV56702ND_PV_PERIOD_PIXEL_NUMS
	#define OV56702ND_VIDEO_PERIOD_LINE_NUMS				OV56702ND_PV_PERIOD_LINE_NUMS

	#define OV56702ND_FULL_PERIOD_PIXEL_NUMS					0x07DC	//2012*2   25fps
	#define OV56702ND_FULL_PERIOD_LINE_NUMS					0x07FD	//2045
	
	#define OV56702NDMIPI_WRITE_ID 	(0x6c)
	#define OV56702NDMIPI_READ_ID	(0x6d)

	#define OV56702NDMIPI_SENSOR_ID            OV5670_SENSOR_ID


	UINT32 OV56702NDMIPIOpen(void);
	UINT32 OV56702NDMIPIGetResolution(MSDK_SENSOR_RESOLUTION_INFO_STRUCT *pSensorResolution);
	UINT32 OV56702NDMIPIGetInfo(MSDK_SCENARIO_ID_ENUM ScenarioId, MSDK_SENSOR_INFO_STRUCT *pSensorInfo, MSDK_SENSOR_CONFIG_STRUCT *pSensorConfigData);
	UINT32 OV56702NDMIPIControl(MSDK_SCENARIO_ID_ENUM ScenarioId, MSDK_SENSOR_EXPOSURE_WINDOW_STRUCT *pImageWindow, MSDK_SENSOR_CONFIG_STRUCT *pSensorConfigData);
	UINT32 OV56702NDMIPIFeatureControl(MSDK_SENSOR_FEATURE_ENUM FeatureId, UINT8 *pFeaturePara,UINT32 *pFeatureParaLen);
	UINT32 OV56702NDMIPIClose(void);

#endif 

